- content_for :sidebar do
  = render 'test_sidebar'

#test-content
  .test-header
    = render 'test_header', section_completion: @section_completion

    #test-timers
      h5
        i class="ss-icon ss-symbolicons-block" timer
        | Section Time
      div id="section-timer-#{@section_completion.section_id}" class="timer section-timer no-play-button"
        .wrapper
          div class="timer-content total-time" data-timer-content="true" = section_completion_total_time @section_completion
          .timer-labels
            span min
            span sec

  - practice_test = @section_completion.practice_test
  - test_progress = TestProgress.new user: current_user, practice_test: practice_test

  - if test_progress.complete?
    = render 'test_complete_header', section_completion: @section_completion
  - else
    = render 'section_complete_header', section_completion: @section_completion

  #section-completion-table
    table
      tr
        th = ''
        th Your Answer
        th Correct Answer
        th = ''
        th Time
        th.focusrank FocusRank?
        th Concept(s)

      - @section_completion.user_responses.includes(:question).order('questions.position').each do |user_response|
        - klass = requires_focus?(user_response.question) ? "focus" : ""
        tr data-id="question-#{user_response.question.id}" class="#{klass}"
          td = "#{user_response.question.position}."
          td = user_response.value
          td = user_response.question.accepted_response
          td.correct-icon
            - if user_response.correct?
              i class="ss-icon correct" &#x2713;
            - else
              i class="ss-icon incorrect" &#x2421;

          td.time = TimeConversions.seconds_to_minutes_and_seconds user_response.time
          td.focusrank
            - if requires_focus?(user_response.question)
              i class="ss-icon ss-symbolicons-block hint--top hint--rounded" data-hint="Answer has impacted your focusrank" crosshair
          td.concept
            - user_response.question.concepts.each do |concept|
              = concept_image concept
